{
	"info": {
		"_postman_id": "3587677a-df42-4c54-8bb0-f66867cec5e5",
		"name": "Users Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Post User Ianthe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User created successfully with a 200 code\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Check that it returns an object\", () => {\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.be.an(\"object\");\r",
							"});\r",
							"\r",
							"pm.test(\"Confirm response message\", () => {\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.username).to.eql(\"demeter\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"demeter\",\r\n    \"firstName\": \"Ianthe\",\r\n    \"password\": \"demeter123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/api/users",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Post User Asha",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User created successfully with a 200 code\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Confirm response message\", () => {\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.username).to.eql(\"hades\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"hades\",\r\n    \"firstName\": \"Asha\",\r\n    \"password\": \"hades123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/api/users",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User created successfully with a 200 code\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Check that it returns an array\", () => {\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.users).to.be.an(\"array\");\r",
							"});\r",
							"\r",
							"pm.test(\"Confirm that there are at least two users\", () => {\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.numberOfUsers).is.at.least(2);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:3000/api/users",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User Ianthe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User created successfully with a 200 code\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Check that first name is Ianthe\", () => {\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.firstName).is.eq(\"Ianthe\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/api/users/demeter",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"users",
						"demeter"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User Aden",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User not found with a 400 code\", () => {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Check that it returns a string\", () => {\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.msg).to.be.a(\"string\");\r",
							"});\r",
							"\r",
							"pm.test(\"Confirm that user was not found\", () => {\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.msg).to.be.eq(\"User Not Found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/api/users/hefesto",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"users",
						"hefesto"
					]
				}
			},
			"response": []
		},
		{
			"name": "Put Ianthe Phone Number",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User updated successfully with a 200 code\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Check updated phone number\", () => {\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.phone).is.eq(\"444 555 666\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"phone\": \"444 555 666\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/api/users/demeter",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"users",
						"demeter"
					]
				}
			},
			"response": []
		},
		{
			"name": "Post User Ianthe Again",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User not created with 400 code\", () => {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Confirm response message\", () => {\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.msg).to.eql(\"User already exist\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"demeter\",\r\n    \"firstName\": \"Ianthe\",\r\n    \"password\": \"demeter123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/api/users",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete User Ianthe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User deleted successfully with a 200 code\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Check that it returns an object\", () => {\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.be.an(\"object\");\r",
							"});\r",
							"\r",
							"pm.test(\"Confirm response message\", () => {\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.msg).to.eql(\"demeter was deleted\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "localhost:3000/api/users/demeter",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"users",
						"demeter"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete User Hades",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User deleted successfully with a 200 code\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Check that it returns an object\", () => {\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.be.an(\"object\");\r",
							"});\r",
							"\r",
							"pm.test(\"Confirm response message\", () => {\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.msg).to.eql(\"hades was deleted\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "localhost:3000/api/users/hades",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"users",
						"hades"
					]
				}
			},
			"response": []
		}
	]
}